/**
 * shut down the strict mode to access full
 * function of meta programming
 */

//'use strict';

// generated by marionette scaffold
var express = require('express');
var http = require('http');
var path = require('path');
var async = require('async');
var hbs = require('hbs');
var socketIO = require('socket.io');

// add from express@4.8.0 scaffold
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

// create and export an express application
module.exports = app = express();

// load config
var config = require('./config');
app.set('yuanhe_config', config);

// generate local variables dynamically
for (var key in config) {
  eval("var " + key + " = '" + config[key] + "'");
}

// set the view engine
app.set('view engine', 'hbs');
// where to find the view files
app.set('views', __dirname + '/views');

// uncomment after placing your favicon in /public
// app.use(favicon(__dirname + '/public/favicon.ico'));

// using dev logger as the very first middleware
app.use(logger('dev'));

// simple log
app.use(function(req, res, next) {
  console.log('%s %s', req.method, req.url);
  next();
});

// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({
  extended: false,
  verify: function(req, res, buf, encoding) {
    req.rawBody = buf.toString();
  }
}));

// parse application/json
app.use(bodyParser.json());

// parse cookie header
app.use(cookieParser());

// mark the app dir as a static dir
app.use(express.static(path.join(__dirname, '../app')));

// pass the express instance to the routes module
var routes = require('./routes')(app);

// 404 error handler
app.use(function(req, res, next) {
  res.status(404);
  res.render('404', {
    url: req.url
  });
});

// 500 error handler
app.use(function(error, req, res, next) {
  res.status(500);
  res.render('500', {
    err: error
  });
});

// start server
http.createServer(app).listen(port, function() {
  console.log('app has started, listening on port ' + port);
});

/**
 * use bae's mongodb code sample
 *
 * @see http://developer.baidu.com/wiki/index.php?title=docs/cplat/bae/mongodb
 */

var mongoClient = require('mongodb').MongoClient;

mongoClient.connect(mongodburl, function(err, db) {
  if (err) {
    console.log(err);
    return;
  }
  db.authenticate(username, password, function(err, result) {
    if (err) {
      console.log(err);
      db.close();
      return;
    };
    db.collection('test_tb').insert([{
      'tsc': 'bobby'
    }], {
      w: 1
    }, function(err, docs) {
      if (err) {
        console.log(err);
        db.close();
        return;
      }
      console.log(docs);
    });
  });
});
